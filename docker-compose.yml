version: '3.8'

services:
  # MongoDB Service
  mongodbIOT:
    image: mongo:latest
    container_name: mongodbIOT
    volumes:
      - mongodb_data_IOT:/data/db
    networks:
      - IOTWOW
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      TZ: "America/Mexico_City"
    ports:
      - "27017:27017"
    restart: unless-stopped

  # Microservices
  microservice_1:
    container_name: M1_MQTTDATASAVE
    build: ./IOTMS/M1
    ports:
      - "5001:5001"
    networks:
      - IOTWOW
    restart: unless-stopped

  microservice_2:
    container_name: M2_DepuracionDB
    build: ./IOTMS/M2
    ports:
      - "5002:5002"
    networks:
      - IOTWOW
    restart: unless-stopped

  microservice_3:
    container_name: M3_removedatosdup
    build: ./IOTMS/M3
    ports:
      - "5003:5003"
    networks:
      - IOTWOW
    restart: unless-stopped

  microservice_4:
    container_name: M4_IOTWS
    build: ./IOTWS
    ports:
      - "4200:4200"
    networks:
      - IOTWOW
    restart: unless-stopped

  microservice_5:
    container_name: M5_IOTAPIREST
    build: ./IOTAPIREST
    ports:
      - "4100:4100"
    networks:
      - IOTWOW
    restart: unless-stopped

  # Portainer Service
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: unless-stopped
    networks:
      - IOTWOW

  # Grafana Service
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - IOTWOW

volumes:
  mongodb_data_IOT:
  portainer_data:
  grafana_data:

networks:
  IOTWOW:
    driver: bridge
    external: true  # Hacemos que la red sea accesible para otros compose
